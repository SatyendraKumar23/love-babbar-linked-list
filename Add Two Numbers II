/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        Stack<Integer>s=new Stack<>();
        Stack<Integer>s2=new Stack<>();
        int sum=0;
        int carry=0;
        ListNode node=new ListNode();

        while(l1!=null||l2!=null)
        {
            if(l1!=null)
            {
                s.push(l1.val);
                l1=l1.next;
            }
            if(l2!=null)
            {
                s2.push(l2.val);
                l2=l2.next;
            }
        }

        while(!s.isEmpty()||!s2.isEmpty())
        {
            if(!s.isEmpty())
            {
                sum+=s.pop();
            }
            if(!s2.isEmpty())
            {
                sum+=s2.pop();
            }

            node.val=sum%10;
            carry=sum/10;

            ListNode temp=new ListNode(carry);
            sum=carry;
            temp.next=node;
            node=temp;
        }
        return carry==0?node.next:node;//agar last add karege toh carry aaya toh right side likhte 
    }
}
